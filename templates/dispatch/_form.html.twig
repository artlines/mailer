{{ form_start(form, {'action': action}) }}
<div class="modal-title">
    <h5>{{ title }}</h5>
</div>
<div class="modal-content">
    <div class="row">
        <div class="input-field col s12">
            {{ form_widget(form.name) }}
            <label for="dispatch[name]">Название</label>
            <span class="red-text">{{ form_errors(form.name) }}</span>
        </div>
    </div>
    <div class="row">
        <div class="input-field col s12">
            {{ form_widget(form.subject) }}
            <label for="dispatch[subject]">Тема</label>
            <span class="red-text">{{ form_errors(form.subject) }}</span>
        </div>
    </div>
    <div class="row">
        <div class="input-field col s4">
            {{ form_widget(form.send_list) }}
            <label for="dispatch[nameFrom]">Список рассылки</label>
            <span class="red-text">{{ form_errors(form.send_list) }}</span>
        </div>
        <div class="input-field col s4">
            {{ form_widget(form.template) }}
            <label for="dispatch[template]">Шаблон</label>
            <span class="red-text">{{ form_errors(form.template) }}</span>
        </div>
        <div class="input-field col s4">
            {{ form_widget(form.status) }}
            <label for="dispatch[status]">Статус</label>
            <span class="red-text">{{ form_errors(form.status) }}</span>
        </div>
    </div>
    <div class="row">
        <div class="input-field col s6">
            {{ form_widget(form.name_from) }}
            <label for="dispatch[nameFrom]">Имя отправителя</label>
            <span class="red-text">{{ form_errors(form.name_from) }}</span>
        </div>
        <div class="input-field col s6">
            {{ form_widget(form.email_from) }}
            <label for="dispatch[emailFrom]">Email отправителя</label>
            <span class="red-text">{{ form_errors(form.email_from) }}</span>
        </div>
        <div class="input-field col s6">
            {{ form_widget(form.email_cc) }}
            <label for="dispatch[emailCc]">Копия</label>
            <span class="red-text">{{ form_errors(form.email_cc) }}</span>
        </div>
        <div class="input-field col s6">
            {{ form_widget(form.email_bcc) }}
            <label for="dispatch[emailBcc]">Скрытая копия</label>
            <span class="red-text">{{ form_errors(form.email_bcc) }}</span>
        </div>
    </div>
    <div class="row">
        <div class="input-field col s6">
            <input type="text" class="datepicker dateSend" name="dateSend"
                   value="" required/>
            <label>Дата отправки</label>
        </div>
        <div class="input-field col s6 hide timepicker-c">
            <input type="text" class="timepicker timeSend" name="timeSend"
                   value=""/>
            <label>Время отправки</label>
        </div>
    </div>

</div>
<div class="modal-footer">
    <div class="feedback-message" id="feedback"></div>
    <button class="modal-close waves-effect waves-green btn-flat" type="reset" name="reset">Отменить</button>
    <button class="btn waves-effect waves-light" type="submit" name="action">{{ button_label|default('Сохранить') }}</button>
</div>

{{ form_end(form) }}
<script>
    $(function () {
        var invalidMessage = 'Ошибка на сервере, обратитесь к администратору';
        var sucessMessage = 'Успешно сохранено!';
        var date, time, datetime;

        if ($('#dispatch_date_send').val()){
            datetime = $('#dispatch_date_send').val();
            $('[name="dateSend"]').val(datetime);
        }

        M.updateTextFields();

        $('select').formSelect();
        $('.timepicker').timepicker({
            'twelveHour': false,
            'autoClose': true,
            'showClearBtn': true,
            'onSelect': function (h,m) {
                time = h +':'+m+ ':00';
                datetime = new Date(date + ' ' + time).toISOString();
                $('#dispatch_date_send').val(datetime);
            }
        });

        var instance = M.Timepicker.getInstance($('.timepicker'));
        $('.datepicker').datepicker({
            'firstDay': 1,
            'format': 'dd.mm.yyyy',
            'showClearBtn': true,
            'autoClose': true,
            'onSelect': function (d) {
                $('.timepicker-c').removeClass('hide');
                instance.open();
                date = d.toDateString();
            }
        });



        $('[name="dispatch"]').submit(function (e) {
            e.preventDefault();
            $.ajax({
                type: "POST",
                url: $(this).attr('action'),
                data: $(this).serialize(),
                beforeSend: function( xhr ) {
                    $('.progress').fadeTo(0, 1);
                    $('[type="submit"]').prop('disabled', true);
                },
                success: function(data, textStatus, xhr) {
                    if (xhr.getResponseHeader('content-type') === 'application/json') {
                        $('#feedback').addClass('light-green').text(sucessMessage).fadeTo(0, 1);
                        setTimeout(function () {
                            location.reload();
                        }, 1000);
                    } else {
                        $('.modal_content').html(data);
                    }
                },

                error: function(data, textStatus, xhr) {
                    $('#feedback').addClass('red').text(invalidMessage).fadeTo(0, 1);
                },
                complete: function( xhr ) {
                    $('.progress').fadeTo(0, 0);
                },
            });
        });


    });
</script>
